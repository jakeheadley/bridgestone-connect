{"version":3,"sources":["animations.js","app.js","mainCtrl.js","mainService.js","server.js"],"names":["angular","module","controller","$scope","mainService","test","service","express","require","massive","bodyParser","nodemailer","cors","PORT","app","exports","conn","connectSync","connectionString","use","json","set","db","get","req","res","next","getAllProducts","err","products","status","send","listen","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACdA;AACAA,QAAQC,MAAR,CAAe,uBAAf,EAAwC,EAAxC;AACA;;;ACFA;AACAD,QAAQC,MAAR,CAAe,uBAAf,EAAwCC,UAAxC,CAAmD,UAAnD,EAA+D,UAASC,MAAT,EAAiBC,WAAjB,EAA6B;;AAExFD,WAAOE,IAAP,GAAc,8CAAd;AAEH,CAJD;AAKA;;;ACNA;AACAL,QAAQC,MAAR,CAAe,uBAAf,EAAwCK,OAAxC,CAAgD,aAAhD,EAA+D,YAAU,CAExE,CAFD;AAGA;;;ACJA;AACA,IAAMC,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,aAAaH,QAAQ,YAAR,CAAnB;AACA,IAAMI,OAAOJ,QAAQ,MAAR,CAAb;AACA,IAAMK,OAAO,IAAb;;AAEA;AACA,IAAMC,MAAMb,OAAOc,OAAP,GAAiBR,SAA7B;;AAEA;AACA,IAAIS,OAAOP,QAAQQ,WAAR,CAAoB;AAC7BC,oBAAmB;AADU,CAApB,CAAX;;AAIA;AACAJ,IAAIK,GAAJ,CAAQT,WAAWU,IAAX,EAAR;;AAEAN,IAAIO,GAAJ,CAAQ,IAAR,EAAcL,IAAd;AACA,IAAIM,KAAKR,IAAIS,GAAJ,CAAQ,IAAR,CAAT;;AAEAT,IAAIS,GAAJ,CAAQ,sBAAR,EAAgC,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACtDJ,KAAGK,cAAH,CAAkB,UAASC,GAAT,EAAcC,QAAd,EAAwB;AACxC,QAAI,CAACD,GAAL,EAAU;AACRH,UAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,QAArB;AACD;AACF,GAJD;AAKD,CAND;;AAQA;AACA;AACA;AACA;AACA;;;AAIA;AACAf,IAAIkB,MAAJ,CAAWnB,IAAX,EAAiB,YAAU;AACzBoB,UAAQC,GAAR,CAAY,oBAAZ,EAAkCrB,IAAlC,EAAwC,OAAxC;AACD,CAFD","file":"bundle.js","sourcesContent":["// Start: Animations ===========================================================\n// $(window).on('scroll', function() {\n//   var winScroll = $(this).scrollTop();\n//\n//   $('.star').css({\n//     'transform': 'translate(-' + winScroll / 2 + '%)'\n//   });\n//   $('.moon').css({\n//     'transform': 'translateY(-' + winScroll / 6.5 + '%)'\n//   });\n//     $('.headline').css({\n//     'transform': 'translate(+' + winScroll / 8 + '%)'\n//   });\n// });\n// End: Animations =============================================================\n","// Start: App ==================================================================\nangular.module(\"bridgestoneConnectApp\", []);\n// Start: App ==================================================================\n","// Start: Main Controller ======================================================\nangular.module(\"bridgestoneConnectApp\").controller(\"mainCtrl\", function($scope, mainService){\n\n    $scope.test = \"bOOya\\! The bridgestoneConnectApp is working\";\n\n});\n// End: Main Controller ========================================================\n","// Start: Main Service =========================================================\nangular.module(\"bridgestoneConnectApp\").service(\"mainService\", function(){\n\n});\n// End: Main Service ===========================================================\n","// Defining Required Dependencies ==============================================\nconst express = require('express');\nconst massive = require('massive');\nconst bodyParser = require('body-parser');\nconst nodemailer = require('nodemailer');\nconst cors = require('cors');\nconst PORT = 3000;\n\n// Declaring the App ===========================================================\nconst app = module.exports = express();\n\n// Connecting to the Database ==================================================\nvar conn = massive.connectSync({\n  connectionString : \"postgres://postgres:Zoltan_22@localhost/bridgestone_connect\"\n});\n\n//var app = express();\napp.use(bodyParser.json());\n\napp.set('db', conn);\nvar db = app.get('db');\n\napp.get('/product_catalog/all', function(req, res, next){\n  db.getAllProducts(function(err, products) {\n    if (!err) {\n      res.status(200).send(products);\n    }\n  });\n});\n\n// app.get('/products', serverCtrl.getProducts);\n//\n// app.get('/product/:id', serverCtrl.getProductById);\n//\n// app.post('/newuser', serverCtrl.newUser);\n\n\n\n// === Server listening to the PORT ============================================\napp.listen(PORT, function(){\n  console.log('Listening on port:', PORT, 'yAy\\!');\n});\n"]}